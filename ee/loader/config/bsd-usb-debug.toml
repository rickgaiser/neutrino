# Name of loaded config, to show to user
name = "USB BDM driver - with UDPTTY debugging"

# Drivers this driver depends on (config file must exist)
depends = ["i_bdm", "i_dev9_hidden"]

# Modules to load
[[module]]
file = "smap_udptty.irx"
args = ["ip=192.168.1.10"]
env = ["LE", "EE"]
[[module]]
file = "usbd_mini.irx"
# Modules that emulate the sceCdRead function must operate at a higher
# priority than the highest possible game priority.
#
# If the priority is lower (higher number) then some games will wait in
# and endless loop for data, but the waiting thread will then cause the
# data to never be processed.
#
# This causes some games to 'need' MODE2 (sync reads) to work.
#
# Supported parameters:
# - dev   = maxDevices
# - ed    = maxEndpoints
# - gtd   = maxTransfDesc
# - itd   = maxIsoTransfDesc
# - ioreq = maxIoReqs
# - conf  = maxStaticDescSize
# - hub   = maxHubDevices
# - port  = maxPortsPerHub
# - thpri = hcdThreadPrio,cbThreadPrio
# USBD defaults
#args = ["dev=32", "ed=64", "gtd=128", "itd=128", "hub=8", "port=8", "thpri=7,8"]
# USBD defaults for 'mini' driver
args = ["thpri=7,8"]
# Save 13KiB IOP RAM extra compared to 'mini'
#args = ["dev=4", "ed=8", "gtd=16", "itd=16", "hub=2", "port=4", "thpri=7,8"]
env = ["LE", "EE"]
[[module]]
file = "usbmass_bd_mini.irx"
env = ["LE", "EE"]

# Modules of the game that are faked/blocked
[[fake]]
file = "USBD.IRX"
name = "USB_driver"
version = 0x0204
startrv = 2 # 0=RESIDENT_END, 1=NO_RESIDENT_END, 2=REMOVABLE_END
